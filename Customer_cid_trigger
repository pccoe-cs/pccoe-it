DROP DATABASE NEWBIE;
CREATE DATABASE NEWBIE;
USE NEWBIE;
CREATE TABLE Customer (
                          Cid INT PRIMARY KEY,
                          CustName VARCHAR(100),
                          City VARCHAR(100)
);

-- Create the Product table
CREATE TABLE Product (
                         Pid INT PRIMARY KEY,
                         ProductName VARCHAR(100),
                         Qty INT
);

-- Create the Orders table
CREATE TABLE Orders (
                        Oid INT PRIMARY KEY,
                        Cid INT,
                        Pid INT,
                        Qty INT,
                        FOREIGN KEY (Cid) REFERENCES Customer(Cid),
                        FOREIGN KEY (Pid) REFERENCES Product(Pid)
);

-- Insert sample data into Customer table
INSERT INTO Customer (Cid, CustName, City)
VALUES (1, 'John Doe', 'New York');

INSERT INTO Customer (Cid, CustName, City)
VALUES (2, 'Jane Smith', 'Los Angeles');

-- Insert sample data into Product table
INSERT INTO Product (Pid, ProductName, Qty)
VALUES (101, 'Laptop', 50);

INSERT INTO Product (Pid, ProductName, Qty)
VALUES (102, 'Smartphone', 100);

INSERT INTO Product (Pid, ProductName, Qty)
VALUES (103, 'Headphones', 200);

-- Insert sample data into Orders table
INSERT INTO Orders (Oid, Cid, Pid, Qty)
VALUES (1, 1, 101, 1);  -- John Doe orders 1 Laptop

INSERT INTO Orders (Oid, Cid, Pid, Qty)
VALUES (2, 2, 102, 2);  -- Jane Smith orders 2 Smartphones

-- Create the trigger to update product quantity after an order is placed
DELIMITER $$

CREATE TRIGGER update_product_qty
    AFTER INSERT ON Orders
    FOR EACH ROW
BEGIN
    UPDATE Product
    SET Qty = Qty - NEW.Qty
    WHERE Pid = NEW.Pid;
END$$

DELIMITER ;

-- Insert additional orders
INSERT INTO Orders (Oid, Cid, Pid, Qty)
VALUES (3, 1, 101, 1);  -- John Doe orders 1 Laptop

INSERT INTO Orders (Oid, Cid, Pid, Qty)
VALUES (4, 2, 103, 3);  -- Jane Smith orders 3 Headphones

-- Verify updated product quantities
SELECT * FROM Product;
